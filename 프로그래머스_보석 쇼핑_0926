from collections import defaultdict as dd
def solution(gems):
    gem_types = dd(int)
    last = -1
    for i, gem in enumerate(gems):
        if not gem_types[gem]:
            gem_types[gem] = 1
            last = i
    min_width = last + 1
    window_gem_list = dd(int)
    for i in range(min_width-1):
        window_gem_list[gems[i]] += 1
        pass
    pnt = 1 
    zero_list = dd(int)
    answer = [1, min_width]
    if min_width == len(gem_types):
        return answer
    while pnt < len(gems) - len(gem_types)+1:
        if window_gem_list[gems[pnt-1]]:
             window_gem_list[gems[pnt-1]] -= 1
        if not window_gem_list[gems[pnt-1]]:
            zero_list[gems[pnt-1]] = 1
        if not zero_list:
            min_width = last - pnt
            answer = [pnt+1, last+1]
        else:
            last += 1
            if last == len(gems):
                last -= 1
            else:
                window_gem_list[gems[last]] += 1
                try:
                    del zero_list[gems[last]]
                except:
                    pass
        pnt += 1
    return answer


'''
풀기전: 
- 아이디어: dictionary에 저장
- 지나가면면서 0이되었으면 0리스트에 넣기.  안되었으면 그대로 및 최소 갱신. 
- 윈도우 최소길이-1 유지하면서 제로리스트 확인. 
- 제로에 없으면 최소길이 갱신. 
- 시간복잡도:
탐색: o(n)
순회: o(n)
풀기 후: 
피드백: 투포인터 사용아직 서툴러서 코드 깔끔하지 않음. 좀더 연습..!,dicftionary -=1 생각. 
'''
